숙제 :
1.로또 랜덤 생성기를 구현하여 github.com에 올리는게 다음주까지 과제
  (숫자 7개를 뽑음. 1~5까지 숫자를 입력하면 몇번째 로또번호는 7개이다. 라는 코드.)

========================================================
2.코틀린 컬렉션에서 mutuable과 immutable이 어떻게 개념이 다른가에 대한 스터디.
3/5 velog에 정리.
========================================================

3.컬렉션 : 객체들의 모임.
컬렉션 프레임워크  : 자료를 더하고 빼고. 
     -list계열은 무엇인가 array list, linkedlist의 사용법  ok 
========================================================
JCF  --set계열은 무엇인가 hashset , treeset의 사용법
========================================================
      --map계열은 무엇인가 hashmap
=================================================
어느 자료구조에서 어떻게 쓸것인가.
효율적으로 다룰것인가.
================================================

generic이란 무엇인가?? 
T를 적용한 스택을 만들어보면 개념을 이해하는데 좋다.
스택 : 클래스
generic을 T라고주고
T가 int든 double이든 으로 주고 pop하는걸 해보기.

다음주 목요일 12시까지.깃허브 주소 + 이름. ok

=================================================

3/12(금)
1. Java Naming Convention
https://www.oracle.com/java/technologies/javase/codeconventions-namingconventions.html

2.객체지향 공부 + 숙제가 나올 예정

3. 
사원의 종류는 일반사원, 
정규직 사원(연봉 1억2천), 파트타임사원(시간당 25000)
사원클래스는(super)
부서객체를 가지고 있고 부서는 개발팀, 영업팀(기본연봉에 영업실적 5%), 고객대응팀,
사무직이 있다

부서 클래스는 언제든 이동이 가능하므로 델리게이트를 이용하여 구현하도록 한다.
--> 사변을 동적으로 생성하는데 동반객체를 이용하여 생성한다.(UUID JAVA Util*)
반드시 EmployeeManger클래스를 main에서 호출하여  각각의 임금을 계산하도록 한다.
  == > EmployeeMagager클래스의 기능 : 사원들의 총월급
                                                   : 사원의 평균월급
                                                   : 부서별 총월급,평균월급

employee manager has a Employee.

사원 객체를 가지고 있음.

메인에서 바로 이어지면 안된다 . EmployeeManager를 통해서.

상수,Enum,SuperClass,EmployeeManager가 존재하게 될 예정.



사번생성기(UUID) 만듬. 이걸 사번으로 사용.

사번이 Department로 넘어감. 거기서 랜덤으로 부서 배정.
부서가 뭔지 리턴.

EmployeeManager클래스를 만들기. 
- 사원들의 총 월급 계산 
- 사원의 평균 월급 계산
- 부서별 총월급 계산


사원생성기, Main, E.M , Department, 개발직, 영업직, 사무직, CS 클래스 8개.


사원클래스(슈퍼클래스)는
부서객체를 가지고 있고 랜덤으로 부서는 개발팀, 영업팀, 고객대응팀, 사무직이 있다

=========================================
1. ArrayListOf 
2. 클래스정리.
3. 코틀린식 정리.


4. 코드리뷰 수요일까지. 


==========================================
3/18 (목)
1. 서비스 플로우 로그인 연결 생각하기
2. 월요일까지 상세 기능 표 구성 생각해오기
3. 화요일 2시 자기소개, 공공아이디어 생각하기.
