node.js
spring기반.

filter.

별짓기 해보기. 

라벨.

58번 슬라이드 암기.

i/o작업.
===================================================
3/12 (금)

낙서장.

노션 정리할 것.
95페이지 null 수신객체 람다. 찾아보기. with none apply .

reflection, intent 알아오기.
memory에있는 속성을 읽는 기능 reflection --> 코틀린에서는 KProperty.

98~100페이지 delegate 위임. 어려움. 패스.

106페이지 카피코딩 필수.

110페이지 : type cast
다형성. 
생성된 타입이 무엇인가?
java xml,interface가 중요. xml!! 
111~113페이지 : RTTI
설명 보고 다시 생각해보기.

115~116페이지 생략. 네이티브 코드 연결할때 추상클래스.

117페이지 인터페이스 노션정리 해야함.
인터페이스의 가장 중요한건 명세(문서)를 만드는 것이다.
네이티브코드.

123페이지. 봉인 클래스. 노션 정리.

128페이지. 동반 객체. Singleton. 정리. static정리.

129페이지. 데이터클래스.


++어플리케이션 클래스를 만들어서 써라.

메인이 실행되기 전에.


=================================================
intent -----o
fragment---
액티비티 프래그먼트 -- o
쓰레드 --o 
xml
화면 이동. -- o 
버튼 정의,에러,팝업,테이블, 등등 정의-- o 
메뉴 아키텍처
햄버거 : 슬라이드로 가져오는 메뉴창
토스트 : 버튼 클릭시 잠시 화면에 나오고 사라지는 알림창
플로팅 : 둥둥 떠있는 메뉴버튼
MANIFEST.
코루틴.
Log.e(currentClassName, """onCreate()""")
로그 찍어주는 코드. 필수.
동기적/비동기적
==================================================
3/26 (금)

내가 쓰는 화면 캡쳐해서 한번 만들어보자 
20페이지 시작

쓰레드를 먼저 공부를 해야 한다.
20페이지 : 4대 컴퍼넌트
21페이지 : Activity에 네비게이션바에 A,B,C,D,E라는 Fragment가 존재한다.
액티비티들은 독자 윈도우 객체를 가진다.(독자적인UI를 가진다)
Component들을 서로 연동하게 만드는것이 Intent.

25페이지 : 협업시 중요한 내용들.

==> 63페이지로 이동

필드 값에 대해서 다시 정리.

65~
해당 콜백메소드에서 썼으면 좋겠는 상황 정리.

27페이지로 돌아옴

30페이지 기본적인 빌드 과정이므로 반드시 공부.

메이븐 레퍼지토리 : 
라이브러리를 가져다가 쓰겠다.
내프로젝트에 okhttp를 쓰겠다.
mvnrepository.com -> okhttp3 검색 ->Stable버전 4.9.1 -> Gradle 복사해서
Dependencies 복붙.

안드로이드 스튜디오 1_2 팁들.

val notifyIntent = Intent(this,MainActivity::class.java)
인텐트 설정하는법.
val serviceIntent = Intent(~~~~)
serviceIntent.putExtra("newsSubject",3)
서비스는 맵구조로 .

점심시간

41페이지 

필터 등록
manifest등록
내 앱이 실행될때 코드상에서 등록.


val intent = Intent(Settings.ACTION_SETTINGS)
intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)
스택 위로 쌓는게 아니라 새로 불러오는 코드.설정.

        intentView2?.setOnClickListener {
            val intent = Intent(Intent.ACTION_DIAL,
                    Uri.parse("tel://010-3745-2833"))
            startActivity(intent)
전화거는 코드.

자바 코드를 코틀린 코드로 바꿔오라.
xml을 바꾸라.


인텐트필터. 액티비티나 브로드캐스트를 등록할거야.

메인액티비티가있어요.
TextView(뉴스가 여기에 뜬다.)
StartService foground를 권한을 줘야한다. --o

서비스 시작 서비스 중지.

Handler는 없어도되고 쓰레드는 없어도된다. 
백그라운드 서비스 코드는 그대로 사용.

리소스 자원 관리 방식.

81페이지부터 리소스
88페이지. 자원을 어떻게 빼내서 쓰는지.
===============================
어플리케이션 코드에 설정. 포트레잇 고정.

registerActivityLifecycleCallbacks(object : ActivityLifecycleCallbacks {
override fun onActivityCreated(activity: Activity, savedInstanceState: Bundle?) {

activity.requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT
}
override fun onActivityStarted(activity: Activity) {}
override fun onActivityResumed(activity: Activity) {}
override fun onActivityPaused(activity: Activity) {}
override fun onActivityStopped(activity: Activity) {}
override fun onActivitySaveInstanceState(p0: Activity, p1: Bundle) {}
override fun onActivityDestroyed(activity: Activity) {}
})
=================================

115페이지~121View의 속성들 다 알아두면 편하다.

셀렉터 : 클릭시, 클릭땠을때, 2개의 이미지.



=================================

리소스파일에 리소스폴더를만들어서 transition적용.
